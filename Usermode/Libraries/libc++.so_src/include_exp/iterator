/*
 */
#ifndef _LIBCXX_ITERATOR_
#define _LIBCXX_ITERATOR_

namespace std {

struct input_iterator_tag {};
struct output_iterator_tag {};
struct forward_iterator_tag {};
struct bidrectional_iterator_tag {};
struct random_access_iterator_tag {};

template <class Category, class T, class Distance = ptrdiff_t, class Pointer = T*, class Reference = T&>
class iterator
{
public:
	typedef T	value_type;	
	typedef Distance	difference_type;
	typedef Pointer	pointer_type;
	typedef Reference	reference;
	typedef Category	iterator_category;
};

template <class Iterator> class iterator_traits;
template <class T> class iterator_traits<T*>;
template <class T> class iterator_traits<const T*>;


};	// namespace std

#endif

// vim: ft=cpp

